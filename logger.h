//
// Created by rufus on 28.01.18.
//

#ifndef MILL_LOGGER_H
#define MILL_LOGGER_H
#include <stdlib.h>
#include <stdbool.h>

#define LOGGER_MAX_LOG_LEVEL LOGGER_LOG_LEVEL_DEBUG

enum LOGGER_LOG_LEVEL{
    LOGGER_LOG_LEVEL_FATAL,
    LOGGER_LOG_LEVEL_ERROR,
    LOGGER_LOG_LEVEL_WARN,
    LOGGER_LOG_LEVEL_INFO,
    LOGGER_LOG_LEVEL_DEBUG
};
////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn static int init_logger();
///
/// @brief	    Inicjalizuje logger
/// @return     1 jeśli wystąpił błąd
////////////////////////////////////////////////////////////////////////////////////////////////////
static int init_logger();

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn void logger_log(enum LOGGER_LOG_LEVEL level, const char *format, ...);
///
/// @brief	    Zapisuje wydarzenie w logach
////////////////////////////////////////////////////////////////////////////////////////////////////
void logger_log(enum LOGGER_LOG_LEVEL level, const char *format, ...);


////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn int logger_close();
///
/// @brief	    Zamyka logger
/// @return     1 jeśli wystąpił błąd
////////////////////////////////////////////////////////////////////////////////////////////////////
int logger_close();
#endif //MILL_LOGGER_H
